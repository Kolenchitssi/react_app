import { fork } from "redux-saga/effects";

import { rootArticleSaga } from "../routes/Main/modules/sagas/rootArticleSaga";
import { rootStarWarsSaga } from "../routes/StarWars/store/saga";

export function* rootSaga() {
  yield fork(rootArticleSaga);
  yield fork(rootStarWarsSaga);
}

//эффекты -вспомогательные функции которые создают простые объекты котрые содержат инструкции
//эти инструкции выполняются самой reduxSagaMiddleware

//take- указывает Middleware ждать выполнения указанного действия
//takeEvery - для каждого срабатывания экшена
//takeLatest -  только для последнего диспатча экшена если поступил новый отменяет предыдущий (если нажать нескоолько раз)
//takeLeading - только для первого
//put - отправить действие в стор, тоесть задиспатчить экшен
//call -останавливает выполнение sagи пока не зарезолвится промис котрый мы ему передали и возвращает простой объект
// это что-то типа await;
//fork - указывает выполнить неблокирующий вызов функции(то есть 2и более функции выполняются паралельно асинхронно)
//spawn - тоже не блокирующая задача но еслив предыдущем процессе ошибка последующий процесс все равно выполняется
//join - подождать выполнения задачи (загрузки и только тогда получит)
//select -получить наш Store
